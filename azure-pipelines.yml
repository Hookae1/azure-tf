variables:
- group: Azure Data
- group: Azure Key Vault


trigger: none

stages: 

# Validate
- stage: Validate
  displayName: Validate
  jobs:
    - job: validate
      pool:
        vmImage: windows-latest

      steps:
      - task: TerraformInstaller@0
        inputs:
          terraformVersion: '1.1.5'

      - task: AzureKeyVault@2
        inputs:
          azureSubscription: $(subscription_id)
          KeyVaultName: $(azure_key_vault)
          SecretsFilter: '*'
          RunAsPreJob: false
      - task: Terraform@2
        displayName: Initialize Terraform
        inputs:
          TemplatePath: '$(System.DefaultWorkingDirectory)'
          Arguments: 'init'
          InstallTerraform: true
          Version: '1.1.5'
          UseAzureSub: true
          ConnectedServiceNameSelector: 'ConnectedServiceNameARM'
          ConnectedServiceNameARM: '$(subscription_id)'
          ManageState: false

# Plan
- stage: Plan
  displayName: Plan
  jobs:
  - job: plan
    pool:
      vmImage: windows-latest

    steps:
    - task: TerraformInstaller@0
      displayName: Install Terraform
      inputs:
        terraformVersion: '1.1.5'

    - task: AzureKeyVault@2
      inputs:
        azureSubscription: $(subscription_id)
        KeyVaultName: $(azure_key_vault)
        SecretsFilter: '*'
        RunAsPreJob: false

    - task: Terraform@2
      displayName: Initialize Terraform
      inputs:
        TemplatePath: '$(System.DefaultWorkingDirectory)'
        Arguments: 'init'
        InstallTerraform: true
        Version: '1.1.5'
        UseAzureSub: true
        ConnectedServiceNameSelector: 'ConnectedServiceNameARM'
        ConnectedServiceNameARM: '$(subscription_id)'
        ManageState: false

    - task: Terraform@2
      displayName: Plan Terraform Deployment
      inputs:
        TemplatePath: '$(System.DefaultWorkingDirectory)'
        Arguments: 'plan -out=tfplan'
        InstallTerraform: true
        Version: '1.1.5'
        UseAzureSub: true
        ConnectedServiceNameSelector: 'ConnectedServiceNameARM'
        ConnectedServiceNameARM: '$(subscription_id)'
        ManageState: false

# Approve for Deploy
- stage: Approve
  displayName: Approve
  jobs:
  - job: approve
    displayName: Wait for approval
    pool: server
    steps: 
    - task: ManualValidation@0
      timeoutInMinutes: 30
      inputs:
        notifyUsers: 'rybitskyiy@outlook.com'
        instructions: 'Review the plan in the next hour'

# Apply        
- stage: Apply
  displayName: Apply
  jobs:
  - job: apply
    pool:
      vmImage: windows-latest
    steps:
    - task: TerraformInstaller@0
      displayName: Install Terraform
      inputs:
        terraformVersion: '1.1.5'

    - task: AzureKeyVault@2
      inputs:
        azureSubscription: $(subscription_id)
        KeyVaultName: $(azure_key_vault)
        SecretsFilter: '*'
        RunAsPreJob: false

    - task: Terraform@2
      displayName: Initialize Terraform
      inputs:
        TemplatePath: '$(System.DefaultWorkingDirectory)'
        Arguments: 'init'
        InstallTerraform: true
        Version: '1.1.5'
        UseAzureSub: true
        ConnectedServiceNameSelector: 'ConnectedServiceNameARM'
        ConnectedServiceNameARM: '$(subscription_id)'
        ManageState: false

    - task: Terraform@2
      displayName: Apply Terraform Deploy
      inputs:
        TemplatePath: '$(System.DefaultWorkingDirectory)'
        Arguments: 'apply -auto-approve'
        InstallTerraform: true
        Version: '1.1.5'
        UseAzureSub: true
        ConnectedServiceNameSelector: 'ConnectedServiceNameARM'
        ConnectedServiceNameARM: '$(subscription_id)'
        ManageState: false

# Approve for Destroy
- stage: Destroy
  displayName: Destroy
  jobs:
  - job: destroy
    displayName: Wait for approval
    pool: server
    steps: 
    - task: ManualValidation@0
      timeoutInMinutes: 120
      inputs:
        notifyUsers: 'rybitskyiy@outlook.com'
        instructions: 'Review the plan in the next hour'

# Destroy        
- stage: Apply
  displayName: Apply
  jobs:
  - job: apply
    pool:
      vmImage: windows-latest
    steps:
    - task: TerraformInstaller@0
      displayName: Install Terraform
      inputs:
        terraformVersion: '1.1.5'
    - task: Terraform@2
      displayName: Destroy Infrastructure
      inputs:
        TemplatePath: '$(System.DefaultWorkingDirectory)'
        Arguments: 'destroy -auto-approve'
        InstallTerraform: true
        Version: '1.1.5'
        UseAzureSub: true
        ConnectedServiceNameSelector: 'ConnectedServiceNameARM'
        ConnectedServiceNameARM: '$(subscription_id)'
        ManageState: false