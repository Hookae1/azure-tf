variables:
- group: Azure Data
- group: Azure Key Vault


trigger: none

stages: 

# Validate
- stage: Validate
  displayName: Validate
  jobs:
    - job: validate
      pool:
        vmImage: windows-latest

      steps:
      - task: TerraformInstaller@0
        inputs:
          terraformVersion: '1.1.5'

      - task: AzureKeyVault@2
        inputs:
          azureSubscription: $(subscription_id)
          KeyVaultName: $(azure_key_vault)
          SecretsFilter: '*'
          RunAsPreJob: false
      - task: Terraform@2
        inputs:
          TemplatePath: '$(System.DefaultWorkingDirectory)'
          Arguments: 'init'
          InstallTerraform: true
          Version: '1.1.5'
          UseAzureSub: true
          ConnectedServiceNameSelector: 'ConnectedServiceNameARM'
          ConnectedServiceNameARM: $(subscription_id)
          ManageState: true
          SpecifyStorageAccount: true
          StorageAccountResourceGroup: $(rgroup_name)
          StorageAccountRM: $(account_name)
          StorageContainerName: $(container_name)

# Plan
- stage: Plan
  displayName: Plan
  jobs:
  - job: plan
    pool:
      vmImage: ubuntu-latest

    steps:
    - task: TerraformInstaller@0
      displayName: Install Terraform
      inputs:
        terraformVersion: '1.1.5'

    - task: AzureKeyVault@2
      inputs:
        azureSubscription: $(subscription_id)
        KeyVaultName: $(azure_key_vault)
        SecretsFilter: '*'
        RunAsPreJob: false

    - task: TerraformCLI@0
      displayName: Initialize Terraform
      inputs:
        command: 'init'
        backendType: 'azurerm'
        allowTelemetryCollection: true

    - task: TerraformCLI@0
      displayName: Plan Terraform Deployment
      env:
        ARM_CLIENT_ID: $(clientID)
        ARM_CLIENT_SECRET: $(clientsecret)
        ARM_SUBSCRIPTION_ID: $(subscription_id)
        ARM_TENANT_ID: $(tenantID)
      inputs:
        command: 'plan'
        environmentServiceName: '$(subscription_id)'
        runAzLogin: true
        allowTelemetryCollection: true
        commandOptions: '-out=tfplan'

# Approve
- stage: Approve
  displayName: Approve
  jobs:
  - job: approve
    displayName: Wait for approval
    pool: server
    steps: 
    - task: ManualValidation@0
      timeoutInMinutes: 30
      inputs:
        notifyUsers: 'rybitskyi@outlook.com'
        instructions: 'Review the plan in the next hour'

# Apply        
- stage: Apply
  displayName: Apply
  jobs:
  - job: apply
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: TerraformInstaller@0
      displayName: Install Terraform
      inputs:
        terraformVersion: '1.1.5'

    - task: AzureKeyVault@2
      inputs:
        azureSubscription: $(subscription_id)
        KeyVaultName: $(azure_key_vault)
        SecretsFilter: '*'
        RunAsPreJob: false

    - task: TerraformCLI@0
      displayName: Initialize Terraform
      inputs:
        command: 'init'
        backendType: 'azurerm'
        allowTelemetryCollection: true

    - task: TerraformCLI@0
      displayName: Apply Terraform Deployment
      env:
        ARM_CLIENT_ID: $(clientID)
        ARM_CLIENT_SECRET: $(clientsecret)
        ARM_SUBSCRIPTION_ID: $(subscription_id)
        ARM_TENANT_ID: $(tenantID)
      inputs:
        command: 'apply'
        environmentServiceName: '$(subscription_id)'
        runAzLogin: true
        allowTelemetryCollection: true
        commandOptions: '-auto-approve'
